/*! phonepad.js build: 0.1.3. MIT Licensed. Copyright(c) 2014 Guillaume Gouchon <guillaume.gouchon@gmail.com> */
"use strict";function GamepadHelper(){var a=!1,b=[],c=[],d=null;this.init=function(a){if(d=a,"ongamepadconnected"in window||navigator.mozGamepads)window.addEventListener("gamepadconnected",j,!1),window.addEventListener("gamepaddisconnected",k,!1);else{var b=navigator.getGamepads||!!navigator.webkitGetGamepads||!!navigator.webkitGamepads;b?e():d.onPadNotSupported(Phonepad.PAD_TYPES.gamepad)}};var e=function(){a||(a=!0,g())},f=function(){},g=function(){i(),h()},h=function(){a&&(window.requestAnimationFrame?window.requestAnimationFrame(g):window.mozRequestAnimationFrame?window.mozRequestAnimationFrame(g):window.webkitRequestAnimationFrame&&window.webkitRequestAnimationFrame(g))},i=function(){var a=navigator.getGamepads&&navigator.getGamepads()||navigator.webkitGetGamepads&&navigator.webkitGetGamepads();if(a){a:for(var e in b){var f=b[e];for(var g in a)if(f===a[g].id)continue a;b.splice(e,1),m(c[e])}a:for(var e in a){var h=a[e];if(null!=h&&e>=0){for(var g in b)if(h.id===b[g])continue a;b.push(h.id),l(h)}}c=[];for(var i in a){var h=a[i];null!=h&&i>=0&&(h.pId=h.id,c.push(h),d.onCommandsReceived(h))}}},j=function(a){l(a.gamepad),e()},k=function(a){for(var b in c)if(c[b].index===a.gamepad.index){m(a.gamepad);break}0===c.length&&f()},l=function(a){c.push(a),d.onPlayerConnected(a.id,Phonepad.PAD_TYPES.gamepad)},m=function(a){c.splice(a.index,1),d.onPlayerDisconnected(a.id)}}function Network(){var a="pad.gcorp.io",b=6060,c="",d="http://pad.gcorp.io",e=null,f=null,g=function(a){var b=io.connect(d);b.emit("newGame"),b.on("gameId",function(b){h(b,a),a.onConnected(b)}),b.on("pId",function(b){a.onPlayerConnected(b,Phonepad.PAD_TYPES.phonepad)}),b.on("comm",function(b){a.onCommandsReceived(b)}),b.on("disconnect",function(a){})},h=function(d,g){try{e=new Peer(d,{host:a,port:b,path:c}),e.on("connection",function(a){f=a,f.on("data",function(a){switch(a.type){case"pId":var b=JSON.parse(a.content);f.pId=b,g.onPlayerConnected(b,Phonepad.PAD_TYPES.phonepad);break;case"comm":var c=JSON.parse(a.content);g.onCommandsReceived(c)}}),f.on("close",function(){})}),e.on("disconnected",function(){h(d,g)})}catch(i){}};this.connect=function(a){g(a)}}function PhonepadCallbacks(){var a={padNotSupported:null,connected:null,playerConnected:null,playerDisconnected:null,commandsReceived:null};this.onPadNotSupported=function(b){null!=a.padNotSupported&&a.padNotSupported(b)},this.onConnected=function(b){null!=a.connected&&a.connected(b)},this.onPlayerConnected=function(b,c){null!=a.playerConnected&&a.playerConnected(b,c)},this.onPlayerDisconnected=function(b){null!=a.playerDisconnected&&a.playerDisconnected(b)},this.onCommandsReceived=function(b){null!=a.commandsReceived&&a.commandsReceived(b)},this.setListener=function(b,c){b in a&&(a[b]=c)}}var Phonepad=function(){function a(a){var b=new PhonepadCallbacks,c=new Network,d=new GamepadHelper;return{on:function(a,c){b.setListener(a,c)},start:function(){c.connect(b),d.init(b)}}}var b;return{getInstance:function(c){return b||(b=a(c)),b}}}();Phonepad.PAD_TYPES={gamepad:0,phonepad:1};